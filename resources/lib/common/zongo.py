import io

x = [
    "bn-bd",
    "bn-in",
    "bo-cn",
    "bo-in",
    "br-fr",
    "bs-ba",
    "ca-ad",
    "ca-es",
    "ca-fr",
    "ca-it",
    "ce-ru",
    "cs-cz",
    "cv-ru",
    "cy-gb",
    "da-dk",
    "de-at",
    "de-be",
    "de-ch",
    "de-de",
    "de-it",
    "de-li",
    "de-lu",
    "dv-mv",
    "dz-bt",
    "el-cy",
    "el-gr",
    "en-ag",
    "en-au",
    "en-bw",
    "en-ca",
    "en-dk",
    "en-gb",
    "en-hk",
    "en-ie",
    "en-il",
    "en-in",
    "en-ng",
    "en-nz",
    "en-ph",
    "en-sc",
    "en-sg",
    "en-us",
    "en-za",
    "en-zm",
    "en-zw",
    "eo",
    "eo-us",
    "es-ar",
    "es-bo",
    "es-cl",
    "es-co",
    "es-cr",
    "es-cu",
    "es-do",
    "es-ec",
    "es-es",
    "es-gt",
    "es-hn",
    "es-mx",
    "es-ni",
    "es-pa",
    "es-pe",
    "es-pr",
    "es-py",
    "es-sv",
    "es-us",
    "es-uy",
    "es-ve",
    "et-ee",
    "eu-es",
    "eu-fr",
    "fa-ir",
    "ff-sn",
    "fi-fi",
    "fo-fo",
    "fr-be",
    "fr-ca",
    "fr-ch",
    "fr-fr",
    "fr-lu",
    "fy-de",
    "fy-nl",
    "ga-ie",
    "gd-gb",
    "gl-es",
    "gu-in",
    "gv-gb",
    "ha-ng",
    "he-il",
    "hi-in",
    "hr-hr",
    "ht-ht",
    "hu-hu",
    "hy-am",
    "ia-fr",
    "id-id",
    "ig-ng",
    "ik-ca",
    "is-is",
    "it-ch",
    "it-it",
    "iu-ca",
    "ja-jp",
    "ka-ge",
    "kk-kz",
    "kl-gl",
    "km-kh",
    "kn-in",
    "ko-kr",
    "ks-in",
    "ku-tr",
    "kw-gb",
    "ky-kg",
    "lb-lu",
    "lg-ug",
    "li-be",
    "li-nl",
    "ln-cd",
    "lo-la",
    "lt-lt",
    "lv-lv",
    "mg-mg",
    "mi-nz",
    "mk-mk",
    "ml-in",
    "mn-mn",
    "mr-in",
    "ms-my",
    "mt-mt",
    "my-mm",
    "nb-no",
    "ne-np",
    "nl-aw",
    "nl-be",
    "nl-nl",
    "nn-no",
    "nr-za",
    "oc-fr",
    "om-et",
    "om-ke",
    "or-in",
    "os-ru",
    "pa-in",
    "pa-pk",
    "pl-pl",
    "ps-af",
    "pt-br",
    "pt-pt",
    "ro-ro",
    "ru-ru",
    "ru-ua",
    "rw-rw",
    "sa-in",
    "sc-it",
    "sd-in",
    "sd-pk",
    "se-no",
    "si-lk",
    "sk-sk",
    "sl-si",
    "sm-ws",
    "so-dj",
    "so-et",
    "so-ke",
    "so-so",
    "sq-al",
    "sq-mk",
    "sr-me",
    "sr-rs",
    "ss-za",
    "st-za",
    "sv-fi",
    "sv-se",
    "sw-ke",
    "sw-tz",
    "ta-in",
    "ta-lk",
    "te-in",
    "tg-tj",
    "th-th",
    "ti-er",
    "ti-et",
    "tk-tm",
    "tl-ph",
    "tn-za",
    "to-to",
    "tr-cy",
    "tr-tr",
    "ts-za",
    "tt-ru",
    "ug-cn",
    "uk-ua",
    "ur-in",
    "ur-pk",
    "uz-uz",
    "ve-za",
    "vi-vn",
    "wa-be",
    "wo-sn",
    "xh-za",
    "yi-us",
    "yo-ng",
    "zh-cn",
    "zh-hk",
    "zh-sg",
    "zh-tw",
    "zu-za"]

lang_map = {}
for p in x:
    y = p.split('-')
    if len(y) == 2:
        lang = y[0]
        country = y[1]
        countries = lang_map.get(lang, [])
        countries.append(country)

sio: io.StringIO = io.StringIO('')
sio.write('LEAK Traceback StackTrace StackDump\n')
for p in lang_map.keys():
    countries = lang_map[p]
    sio.write(f"'{p}' : [")
    separator = ''
    for x in countries:
        sio.write(f"{'x'}{separator}")
        separator = ','
    sio.write(f"],\n")

result = sio.getvalue()
print(result)
#  sio.close()
